{"version":3,"sources":["assets/monocoptor.png","assets/monocoptor_flying.png","assets/tot.wav","components/MonocoptorComponent.js","components/ControlBoxComponent.js","physics/PidMonocoptor.js","physics/PidController.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","audio","Audio","audioFile","MonocoptorComponent","monocoptorImage","monocoptor","this","props","coptor","thrust","monocoptor_flying","vol","Math","floor","volume","play","className","style","left","x_pos","top","y_pos","z","backgroundImage","backgroundSize","backgroundColor","React","Component","ControlBoxComponent","Typography","position","color","id","gutterBottom","controlBox","mass_error","Slider","LEFT","width","defaultValue","value","onChange","event","controlBoxChanged","min","max","step","TOP","k_p","k_d","k_i","Button","variant","height","onClick","coptorStateInit","state","ready","controlStateChanged","MonoCoptor","prop","initialize","m","g","z_dot","z_dot_dot","advance_state","dt","delta_z_dot","delta_z","mass","Controller","thrust_control","target_z","actual_z","target_z_dot","actual_z_dot","e","e_dot","integral_z","u_bar","runBy","name","INIT","k_f","z_list","target_z_list","manual","throttle","App","setState","controller","stopFunction","update","omega","sqrt","coptorStateUpdate","controlState","setInterval","config","displayModeBar","data","type","showlegend","y","mode","marker","layout","title","margin","l","r","t","b","paper_bgcolor","plot_bgcolor","font","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.25294499.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/monocoptor.c62f462c.png\";","module.exports = __webpack_public_path__ + \"static/media/monocoptor_flying.ea1a8012.png\";","module.exports = __webpack_public_path__ + \"static/media/tot.c281fe14.wav\";","import React from \"react\";\n\nimport monocoptor from \"../assets/monocoptor.png\";\nimport monocoptor_flying from \"../assets/monocoptor_flying.png\";\nimport audioFile from \"../assets/tot.wav\";\n\nimport \"./Monocoptor.css\";\n\nconst x_pos = 20;\nconst y_pos = 20;\n\nconst tube_x = x_pos;\nconst tube_y = y_pos;\nconst tube_h = 550;\n\nconst drone_x = x_pos + 57;\nconst drone_y = y_pos + tube_h - 20;\n\nconst audio = new Audio(audioFile);\n\nclass MonocoptorComponent extends React.Component {\n  render() {\n    var monocoptorImage = monocoptor;\n    if ( this.props.coptor.thrust ) {\n      monocoptorImage = this.props.coptor.thrust > 0 ? monocoptor_flying : monocoptor;\n      if (this.props.coptor.thrust > 0) {\n        var vol = Math.floor(this.props.coptor.thrust) / 20;\n        if ( vol > 1 ) vol = 1;\n        // console.log(vol);\n        audio.volume = vol;\n        audio.play();\n      }\n    }\n    return (\n      <div>\n        <div\n          className=\"drone\"\n          style={{\n            left: drone_x,\n            top: drone_y + this.props.coptor.z * 240,\n            backgroundImage: `url(${monocoptorImage})`,\n            backgroundSize: \"100% 100%\"\n          }}\n        />\n        <div className=\"cylinder\" style={{ left: tube_x, top:tube_y }}>\n            <div className=\"ellipse\" style={{ backgroundColor: \"deepskyblue\" }}></div>\n            <div className=\"rectangle\" style={{ backgroundColor: \"lightgray\" }}></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MonocoptorComponent;\n","import React from \"react\";\nimport { Typography, Slider, Button } from \"@material-ui/core\";\n\nconst LEFT = 170;\nconst TOP = 22;\nconst GAP = 30;\nconst SLD_GAP = 150;\n\nclass ControlBoxComponent extends React.Component {\n  render() {\n    return (\n      <div>\n        <Typography\n          style={{\n            left: LEFT,\n            top: TOP,\n            position: \"absolute\",\n            color: \"#ffffff\"\n          }}\n          id=\"discrete-slider-small-steps\"\n          gutterBottom\n        >\n          Mass Err &nbsp;&nbsp;: &nbsp;&nbsp;{this.props.controlBox.mass_error}\n        </Typography>\n        <Slider\n          style={{\n            left: LEFT + SLD_GAP,\n            top: TOP,\n            width: 400,\n            position: \"absolute\"\n          }}\n          defaultValue={0}\n          value={this.props.controlBox.mass_error}\n          onChange={(event, value) => {\n            this.props.controlBoxChanged({\n              ...this.props.controlBox,\n              mass_error: value\n            });\n          }}\n          min={0.5}\n          max={3.0}\n          step={0.01}\n        />\n        <Typography\n          style={{\n            left: LEFT,\n            top: TOP + GAP,\n            position: \"absolute\",\n            color: \"#ffffff\"\n          }}\n          id=\"discrete-slider-small-steps\"\n          gutterBottom\n        >\n          P value : &nbsp;&nbsp;{this.props.controlBox.k_p}\n        </Typography>\n        <Slider\n          style={{\n            left: LEFT + SLD_GAP,\n            top: TOP + GAP,\n            width: 400,\n            position: \"absolute\"\n          }}\n          defaultValue={0}\n          value={this.props.controlBox.k_p}\n          onChange={(event, value) => {\n            this.props.controlBoxChanged({\n              ...this.props.controlBox,\n              k_p: value\n            });\n          }}\n          min={0}\n          max={50}\n          step={1}\n        />\n        <Typography\n          style={{\n            left: LEFT,\n            top: TOP + GAP * 2,\n            position: \"absolute\",\n            color: \"#ffffff\"\n          }}\n          id=\"discrete-slider-small-steps\"\n          gutterBottom\n        >\n          D value : &nbsp;&nbsp;{this.props.controlBox.k_d}\n        </Typography>\n        <Slider\n          style={{\n            left: LEFT + SLD_GAP,\n            top: TOP + GAP * 2,\n            width: 400,\n            position: \"absolute\"\n          }}\n          defaultValue={0}\n          value={this.props.controlBox.k_d}\n          onChange={(event, value) => {\n            this.props.controlBoxChanged({\n              ...this.props.controlBox,\n              k_d: value\n            });\n          }}\n          min={0}\n          max={20}\n          step={1}\n        />\n        <Typography\n          style={{\n            left: LEFT,\n            top: TOP + GAP * 3,\n            position: \"absolute\",\n            color: \"#ffffff\"\n          }}\n          id=\"discrete-slider-small-steps\"\n          gutterBottom\n        >\n          I&nbsp; value : &nbsp;&nbsp;{this.props.controlBox.k_i}\n        </Typography>\n        <Slider\n          style={{\n            left: LEFT + SLD_GAP,\n            top: TOP + GAP * 3,\n            width: 400,\n            position: \"absolute\"\n          }}\n          defaultValue={0}\n          value={this.props.controlBox.k_i}\n          onChange={(event, value) => {\n            this.props.controlBoxChanged({\n              ...this.props.controlBox,\n              k_i: value\n            });\n          }}\n          min={0}\n          max={20}\n          step={1}\n        />\n        <Button\n          variant=\"contained\"\n          color=\"default\"\n          style={{\n            position: \"absolute\",\n            left: LEFT + 180,\n            top: TOP + GAP * 4.5,\n            width: 80,\n            height: 25\n          }}\n          onClick={(event) => {\n            this.props.coptorStateInit();\n          }}\n        >\n          Init\n        </Button>\n        <Button\n          variant=\"contained\"\n          color={this.props.controlBox.state.ready ? \"secondary\" : \"default\"}\n          style={{\n            position: \"absolute\",\n            left: LEFT + 300,\n            top: TOP + GAP * 4.5,\n            width: 80,\n            height: 25\n          }}\n          onClick={(event) => {\n            this.props.controlStateChanged({\n              ...this.props.controlBox.state,\n              ready: this.props.controlBox.state.ready ? false : true\n            });\n          }}\n        >\n          Run\n        </Button>\n      </div>\n    );\n  }\n}\nexport default ControlBoxComponent;\n","class MonoCoptor {\n  constructor(prop) {\n    this.initialize(prop.z, prop.mass);\n  }\n\n  initialize = (z, m) => {\n    this.g = 9.81;\n\n    this.z = z;\n    this.z_dot = 0.0;\n\n    this.m = m;\n\n    this.thrust = 0;\n  };\n\n  z_dot_dot = () => {\n    var f_net = this.m * this.g - this.thrust;\n    return f_net / this.m;\n\n    // var f = this.k_f * this.omega * this.omega;\n    // return (this.m * this.g - f) / this.m;\n  };\n\n  advance_state = (dt) => {\n    // var z_dot_dot = 9.81;\n\n    var delta_z_dot = this.z_dot_dot() * dt;\n    this.z_dot = this.z_dot + delta_z_dot;\n\n    var delta_z = this.z_dot * dt;\n    this.z = this.z + delta_z;\n    // console.log(\"z_dot\", this.z_dot, \"z\", this.z);\n\n    // console.log(this.z_dot, this.z);\n  };\n}\n\nexport default MonoCoptor;\n","class Controller {\n  constructor(monocoptor, state) {\n    this.name = \"PidController\";\n    this.monocoptor = monocoptor;\n    this.mass_error = state.controlBox.mass_error;\n\n    this.k_p = state.controlBox.k_p;\n    this.k_d = state.controlBox.k_d;\n    this.k_i = state.controlBox.k_i;\n    this.integral_z = 0;\n    this.g = 9.81;\n    this.target_z = state.controlBox.target_z;\n    this.target_z_dot = 0;\n  }\n\n  thrust_control = (target_z, actual_z, target_z_dot, actual_z_dot, dt) => {\n    var mass = this.monocoptor.m * this.mass_error;\n    var e = target_z - actual_z;\n    var e_dot = target_z_dot - actual_z_dot;\n    this.integral_z += e * dt;\n    var u_bar = this.k_p * e + this.k_d * e_dot + this.k_i * this.integral_z;\n    var u = mass * (this.g - u_bar);\n    return u;\n  };\n\n  runBy = (dt) => {\n    this.monocoptor.thrust = this.thrust_control(\n      this.target_z,\n      this.monocoptor.z,\n      this.target_z_dot,\n      this.monocoptor.z_dot,\n      dt\n    );\n    this.monocoptor.advance_state(dt);\n  };\n\n}\n\nexport default Controller;\n","import React from \"react\";\n\nimport MonocoptorComponent from \"./components/MonocoptorComponent\";\nimport ControlBoxComponent from \"./components/ControlBoxComponent\";\nimport Plot from \"react-plotly.js\";\nimport MonoCoptor from \"./physics/PidMonocoptor\";\nimport Controller from \"./physics/PidController\";\n\nimport \"./App.css\";\n\nconst MS_DELAY = 10;\nconst MILLI_DT = 0.01;\n\nconst INIT = {\n  coptor: {\n    thrust: 0,\n    k_f: 0.1,\n    mass: 1.0,\n    z: 0.0,\n    z_dot: 0,\n    z_list: [], // new Uint8Array([]),\n    target_z_list: [] // new Uint8Array([])\n  },\n  controlBox: {\n    state: {\n      ready: false,\n      manual: false\n    },\n    throttle: 0,\n    mass_error: 1.0,\n    k_p: 10,\n    k_d: 0,\n    k_i: 0,\n    target_z: -1.0\n  }\n};\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = INIT;\n    this.dt = MILLI_DT;\n  }\n\n  initialize = () => {\n    this.setState(INIT, () => {\n      this.monocoptor = new MonoCoptor(this.state.coptor);\n      this.controller = new Controller(this.monocoptor, this.state);\n      if ( this.controller.name !== \"PidController\" ) {\n        INIT.coptor.z = -1.0;\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.initialize();\n    setInterval(this.update, MS_DELAY);\n  }\n\n  stopFunction = () => {\n    this.setState({\n      ...this.state,\n      controlBox: {\n        ...this.state.controlBox,\n        state: { ...this.state.controlBox.state, ready: false }\n      }\n    });\n  };\n\n  update = () => {\n    if ( this.controller.name === \"BaseController\" && INIT.controlBox.state.manual ) {\n      if (this.state.controlBox.throttle >= 0) {\n        // this.monocoptor.omega = this.state.controlBox.throttle / 50; // throttle => omega\n        this.monocoptor.omega = Math.sqrt(this.state.controlBox.throttle);\n        this.controller.runBy(this.dt, this.stopFunction);\n        this.coptorStateUpdate(this.monocoptor.z, this.monocoptor.thrust);\n      }\n    }\n    else {\n      if (this.state.controlBox.state.ready) {\n        this.controller.runBy(this.dt, this.stopFunction);\n        this.coptorStateUpdate(this.monocoptor.z, this.monocoptor.thrust);\n      }\n\n    }\n  };\n\n  coptorStateInit = () => {\n    this.setState({ ...this.state, coptor: INIT.coptor }, () => {\n      this.monocoptor = new MonoCoptor(this.state.coptor);\n      this.controller = new Controller(this.monocoptor, this.state);\n      this.stopFunction();\n    });\n  };\n\n  coptorStateUpdate = (z, thrust) => {\n    this.setState({\n      ...this.state,\n      coptor: {\n        ...this.state.coptor,\n        z,\n        thrust,\n        z_list: [...this.state.coptor.z_list, -z],\n        target_z_list: [\n          ...this.state.coptor.target_z_list,\n          -this.state.controlBox.target_z\n          // thrust\n        ]\n      }\n    });\n  };\n\n  controlBoxChanged = (controlBox) => {\n    this.setState({ ...this.state, controlBox }, () => {\n      this.monocoptor = new MonoCoptor(this.state.coptor);\n      this.controller = new Controller(this.monocoptor, this.state);\n    });\n  };\n\n  controlStateChanged = (controlState) => {\n    this.setState({\n      ...this.state,\n      controlBox: { ...this.state.controlBox, state: controlState }\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MonocoptorComponent coptor={this.state.coptor} />\n        <ControlBoxComponent\n          controlBox={this.state.controlBox}\n          controlBoxChanged={this.controlBoxChanged}\n          controlStateChanged={this.controlStateChanged}\n          coptorStateInit={this.coptorStateInit}\n        />\n\n        <Plot\n          style={{\n            left: 130,\n            top: 190,\n            position: \"absolute\"\n          }}\n          config={{\n            displayModeBar: false\n          }}\n          data={[\n            {\n              type: \"scatter\",\n              showlegend: false,\n              y: this.state.coptor.z_list,\n              mode: \"lines+points\",\n              marker: { color: \"white\" }\n            },\n            {\n              type: \"scatter\",\n              showlegend: false,\n              y: this.state.coptor.target_z_list,\n              mode: \"lines+points\",\n              marker: { color: \"red\" }\n            }\n          ]}\n          layout={{\n            title: \"Monocopter PID Controller\",\n            width: 650,\n            height: 400,\n            margin: {l: 35, r:30, t:35, b:32},\n            paper_bgcolor: \"#000000\",\n            plot_bgcolor: \"#000000\",\n            font: { color: \"#ffffff\" }\n          }}\n        />\n      </div>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}